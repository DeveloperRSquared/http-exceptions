name: Deploy
on:
  push:
    tags:
      - "v*"

defaults:
  run:
    shell: bash
    working-directory: src

env:
  DOCKER_IMAGE: http-exceptions
  WORKDIR: /app

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check package version == tag
        run: |
          version=$(python setup.py --version)
          if [ "${{ github.ref }}" != "refs/tags/v${version}" ]; then
            echo "Version in setup.py: (v${version}) is different to the tag: (${{ github.ref }})."
            exit 1;
          fi

      - name: Build docker image
        run: docker build --tag ${DOCKER_IMAGE} --file Dockerfile .

      - name: Publish package to PyPI
        run: |
          CONTAINER_NAME=http-exceptions
          sed -i -e "s/\${PYPI_TOKEN}/${{ secrets.PYPI_TOKEN }}/" .pypirc
          docker run --name ${CONTAINER_NAME} --rm --detach --volume $(pwd)/setup.py:${WORKDIR}/setup.py --volume $(pwd)/.pypirc:/root/.pypirc --volume $(pwd)/../README.md:/README.md --entrypoint sleep ${DOCKER_IMAGE} 600
          docker exec ${CONTAINER_NAME} python setup.py bdist_wheel
          docker exec ${CONTAINER_NAME} twine check 'dist/*'
          docker exec ${CONTAINER_NAME} twine upload --config-file /root/.pypirc --non-interactive --disable-progress-bar dist/*
          docker stop ${CONTAINER_NAME}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
